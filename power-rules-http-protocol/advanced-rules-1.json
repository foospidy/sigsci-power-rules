{
  "preLateRule": "",
  "initRule": "# NAME: HTTP Protocol\n# DESCRIPTION: Identifies various violations of the HTTP spec.\n# DEPENDENCY: None.\n# REFERENCES:\n# https://annevankesteren.nl/2007/10/http-methods\n#\n\n$methods := array \\\n \"OPTIONS\" \\\n \"GET\" \\\n \"HEAD\" \\\n \"POST\" \\\n \"PUT\" \\\n \"DELETE\" \\\n \"TRACE\" \\\n \"CONNECT\" \\\n \"PROPFIND\" \\\n \"PROPPATCH\" \\\n \"MKCOL\" \\\n \"COPY\" \\\n \"MOVE\" \\\n \"LOCK\" \\\n \"UNLOCK\"\n\n$protocol_version := array \"HTTP/0.9\" \"HTTP/1.0\" \"HTTP/1.1\" \"HTTP/2\"\n\n$.Set \"_MethodMatcher\" (NewHashMatcher $methods)\n$.Set \"_ProtocolVersionMatcher\" (NewHashMatcher $protocol_version)\n$.Set \"_ProtocolViolations\" (Array \"site.http-path\" \"site.http-method\" \"site.http-version\" \"site.http-host\" \"site.http-accept\" \"site.http-content\" \"site.http-xff\" \"NO-CONTENT-TYPE\")",
  "postEarlyRule": "",
  "sampleResponse": "HTTP/1.1 200 OK\nServer: nginx\nDate: Fri, 21 Aug 2015 21:30:50 GMT\nContent-Type: text/html; charset=utf-8\nConnection: keep-alive\nContent-Length: 0\nx-xss-protection: 1; mode=block\nx-content-type-options: nosniff\npragma: no-cache\nx-frame-options: SAMEORIGIN\nStrict-Transport-Security: max-age=15552000; includeSubDomains\nX-Request-ID: 123456789",
  "postRule": "",
  "preRule": "# Check for invalid path\nif (slice 0 1 $.Path) | NotEqual \"/\"\n $.AddSignal \"site.http-path\" \"PATH\" (printf \"Invalid path: %s\" $.Path) $ruleid\nend\n\n# Check for an non-standard or unsupported method\nif not ($.Method | $.Config._MethodMatcher.MatchOne)\n $.AddSignal \"site.http-method\" \"HEADERIN\" (printf \"Invalid method: %s\" $.Method) $ruleid\nend\n\n# Check for deprecated http version\nif $.Protocol | Equal \"HTTP/0.9\"\n $.AddSignal \"site.http-version\" \"HEADERIN\" (printf \"Deprecated version: %s\" $.Protocol) $ruleid\n\nelse if not ($.Protocol | $.Config._ProtocolVersionMatcher.MatchOne)\n $.AddSignal \"site.http-version\" \"HEADERIN\" (printf \"Invalid version: '%s' (%x)\" $.Protocol $.Protocol) $ruleid\nend\n\n# For HTTP 1.0 & 1.1 a host header must be present\nif or ($.Protocol | Equal \"HTTP/1.0\") ($.Protocol | Equal \"HTTP/1.1\")\n if $.ServerName | Equal \"\"\n $.AddSignal \"site.http-host\" \"HEADERIN\" \"Missing or empty Host header\" $ruleid\n end\nend\n\n# Check for accept header\nif \"Accept\" | Lookup $.RequestHeaders | Equal \"\"\n $.AddSignal \"site.http-accept\" \"HEADERIN\" \"Missing or empty Accept header\" $ruleid\nend\n\n# Check XFF for valid ip address\nrange \"X-Forwarded-For\" | LookupAll $.RequestHeaders\n range (. | StringSplit \",\")\n $ip := index .\n\n if $ip | StringTrim | NotEqual \"\"\n if not ($ip | StringTrim | NetworkContainsQ (Array \"0.0.0.0/0\" \"::/0\") | AnyTrueQ)\n $.AddSignal \"site.http-xff\" \"HEADERIN\" (printf \"Invalid value: %s\" $ip) $ruleid\n end\n end\n end\nend\n\nif $.TagList | ContainsAny $.Config._ProtocolViolations\n $.AddSignal \"site.http-protocol\" \"HEADERIN\" \"HTTP Protocol Violation Detected\" $ruleid\nend",
  "preEarlyRule": "",
  "sampleRequest": "POST /foobar?key1=value1 HTTP/1.1\nHost: sample.foo\nAccept-Encoding: gzip, deflate\nAccept-Language: en-us\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nConnection: keep-alive\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 10000\nCookie:\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_4) AppleWebKit/600.7.12 (KHTML, like Gecko) Version/8.0.7 Safari/600.7.12\nCache-Control: max-age=0\nX-Forwarded-For: 127.0.0.1\nX-Forwarded-Proto: https\nX-Forwarded-For: value\n\npostkey1=value1&post2=value2",
  "shortName": "HTTP Protocol",
  "postLateRule": "",
  "enabled": true
}
