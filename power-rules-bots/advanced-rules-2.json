{
  "preLateRule": "",
  "initRule": "# NAME: BadBots\n# DESCRIPTION: Identify bad bot requests.\n# DEPENDENCY: Bots/Bot.s\n#\n#############\n# Init Rule #\n#############\n\n$bot_attack_scanner := Array \\\n \"shellshock-scan\" \\\n \"sitelock\" \\\n \"sucuri\" \\\n \"scanalert\" \\\n \"jorgee\"\n\n$bot_attack_exploit := Array \\\n \"thanks-rob\"\n\n$.Set \"BotAttackScanner\" (NewAhoCorasickMatcher $bot_attack_scanner)\n$.Set \"BotAttackExploit\" (NewAhoCorasickMatcher $bot_attack_exploit)",
  "postEarlyRule": "",
  "sampleResponse": "HTTP/1.1 200 OK\nServer: nginx\nDate: Fri, 21 Aug 2015 21:30:50 GMT\nContent-Type: text/html; charset=utf-8\nConnection: keep-alive\nContent-Length: 0\nx-xss-protection: 1; mode=block\nx-content-type-options: nosniff\npragma: no-cache\nx-frame-options: SAMEORIGIN\nStrict-Transport-Security: max-age=15552000; includeSubDomains\nX-Request-ID: 123456789",
  "postRule": "$badbot := $.GetSubMap \"badbot\"\n\nif not $badbot\n $badbot.Set \"bot\" \"\"\n $badbot.Set \"reason\" \"\"\nend\n\nif and ($.TagList | ContainsAny (Array \"SANS\" \"DATACENTER\" \"TORNODE\")) ($.TagList | ContainsAny (Array \"site.bot\"))\n $badbot.Set \"bot\" (printf \"%s%s\" $badbot.bot \"ðŸ‘¾\")\n $badbot.Set \"reason\" (printf \"%s; Anomalous Source\" $badbot.reason)\nend\n\nif and ($.TagList | ContainsAny (Array \"NOUA\" \"PRIVATEFILE\" \"FORCEFULBROWSING\" \"TRAVERSAL\" \"BACKDOOR\")) ($.TagList | ContainsAny (Array \"site.bot\"))\n $badbot.Set \"bot\" (printf \"%s%s\" $badbot.bot \"ðŸ‘¾\")\n $badbot.Set \"reason\" (printf \"%s; Malicious Probe\" $badbot.reason)\nend\n\n$badbotstr := $badbot.bot\n\nif $badbotstr | len | Greater 0\n $.AddSignal \"site.bad-bot\" \"REQUEST\" (printf \"%s%s\" $badbot.bot $badbot.reason) $ruleid\nend",
  "preRule": "$.NeedRequest\n\n$badbot := $.NewSubMap \"badbot\"\n$badbot.Set \"bot\" \"\"\n$badbot.Set \"reason\" \"\"\n\nif or (lower $.UserAgent | $.Config.BotAttackScanner.MatchOne) ($.TagList | ContainsAny (Array \"SCANNER\"))\n $badbot.Set \"bot\" (printf \"%s%s\" $badbot.bot \"ðŸ‘¾\")\n $badbot.Set \"reason\" (printf \"%s; Scanner\" $badbot.reason)\nend\n\nif and ($.TagList | ContainsAny (Array \"bot\")) ($.TagList | ContainsAny (Array \"USERAGENT\"))\n $badbot.Set \"bot\" (printf \"%s%s\" $badbot.bot \"ðŸ‘¾\")\n $badbot.Set \"reason\" (printf \"%s; Attack Tooling\" $badbot.reason)\nend\n\nif lower $.UserAgent | $.Config.BotAttackExploit.MatchOne\n $badbot.Set \"bot\" (printf \"%s%s\" $badbot.bot \"ðŸ‘¾\")\n $badbot.Set \"reason\" (printf \"%s; Exploit Tool: %s\" $badbot.reason $.UserAgent)\nend",
  "preEarlyRule": "",
  "sampleRequest": "POST /foobar?key1=value1 HTTP/1.1\nHost: sample.foo\nAccept-Encoding: gzip, deflate\nAccept-Language: en-us\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nConnection: keep-alive\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 10000\nCookie:\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_4) AppleWebKit/600.7.12 (KHTML, like Gecko) Version/8.0.7 Safari/600.7.12\nCache-Control: max-age=0\nX-Forwarded-For: 127.0.0.1\nX-Forwarded-Proto: https\n\npostkey1=value1&post2=value2",
  "shortName": "Bad Bots",
  "postLateRule": "",
  "enabled": true
}
