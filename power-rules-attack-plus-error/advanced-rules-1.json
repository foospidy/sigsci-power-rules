{
  "preLateRule": "",
  "initRule": "# NAME: Attack + Error\n# DESCRIPTION: Correlates attack payloads with application error response codes\n# to identify active attempts at exploiting an application bug.\n# DEPENDENCY: None.\n#\n$.Set \"_AttackTags\" (Array \"SQLI\" \"SQLILOWQ\" \"XSS\" \"CMDEXE\" \"TRAVERSAL\" \"USERAGENT\" \"RESPONSESPLIT\" \"CODEINJECTION\")",
  "postEarlyRule": "",
  "sampleResponse": "HTTP/1.1 500 OK\nServer: nginx\nDate: Fri, 21 Aug 2015 21:30:50 GMT\nContent-Type: text/html; charset=utf-8\nConnection: keep-alive\nContent-Length: 0\nx-xss-protection: 1; mode=block\nx-content-type-options: nosniff\npragma: no-cache\nx-frame-options: SAMEORIGIN\nStrict-Transport-Security: max-age=15552000; includeSubDomains\nX-Request-ID: 123456789",
  "postRule": "if and (ge $.ResponseCode 500) (le $.ResponseCode 599) ($.TagList | ContainsAny $.Config._AttackTags)\n $.AddSignal \"site.attack-error\" \"HEADERIN_HEADEROUT\" (printf \"Attack + %d\" $.ResponseCode) $ruleid\nend",
  "preRule": "",
  "preEarlyRule": "",
  "sampleRequest": "POST /foobar?key1=<script>alert()</script> HTTP/1.1\nHost: sample.foo\nAccept-Encoding: gzip, deflate\nAccept-Language: en-us\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nConnection: keep-alive\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 10000\nCookie:\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_4) AppleWebKit/600.7.12 (KHTML, like Gecko) Version/8.0.7 Safari/600.7.12\nCache-Control: max-age=0\nX-Forwarded-For: 127.0.0.1\nX-Forwarded-Proto: https\n\npostkey1=value1&post2=value2",
  "shortName": "Attack Plus Error",
  "postLateRule": "",
  "enabled": true
}
